pipeline { 
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Using Maven/Gradle for building the application.'
                echo 'Building the application with Maven/Gradle...'
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                script {
                    try {
                        echo 'Running tests with JUnit, Selenium, or Mockito...'
                        
                        // Simulate test execution
                        sh 'echo "Running tests..."'

                        echo 'Tests passed successfully.'
                        
                        // Send email notification for test success
                        emailext subject: "Jenkins Pipeline: Tests Passed ‚úÖ",
                            body: """
                                <p>All unit and integration tests passed successfully.</p>
                                <p>Build URL: <a href="${env.BUILD_URL}">${env.BUILD_URL}</a></p>
                            """,
                            to: 'tanmayabhinav@gmail.com',
                            mimeType: 'text/html'
                    } catch (Exception e) {
                        echo 'Tests failed! Sending failure email...'
                        
                        // Send email notification for test failure
                        emailext subject: "Jenkins Pipeline: Tests Failed ‚ùå",
                            body: """
                                <p>Unit and integration tests failed. Please check the logs.</p>
                                <p>Build URL: <a href="${env.BUILD_URL}">${env.BUILD_URL}</a></p>
                            """,
                            to: 'tanmayabhinav@gmail.com',
                            mimeType: 'text/html'
                        
                        error "Failing the build due to test failure."
                    }
                }
            }
        }

        stage('Code Analysis') {
            steps {
                echo 'Performing static code analysis using SonarQube...'
		echo 'https://docs.sonarsource.com/sonarqube-server/latest/'
            }
        }

        stage('Security Scan') {
            steps {
                echo 'Performing security scan using OWASP Dependency-Check or Trivy...'
		echo 'https://plugins.jenkins.io/dependency-check-jenkins-plugin/'
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging using Docker/Kubernetes/Ansible...'
		echo 'https://www.jenkins.io/doc/book/pipeline/docker/'
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging using Postman (Newman) or Selenium...'
		echo 'https://www.selenium.dev/documentation/'
            }
        }

        stage('Deploy to Production') {
            steps {
                echo 'Deploying application to production using Docker, AWS CodeDeploy, or Kubernetes...'
		echo 'https://www.jenkins.io/doc/book/pipeline/docker/'

            }
        }
    }

    post {
        always {
            echo 'Sending final pipeline status notification...'
            
            emailext subject: "Jenkins Pipeline Execution Status üì©",
                body: """
                    <p>The pipeline has completed execution.</p>
                    <p>Final Status: ${currentBuild.currentResult}</p>
                    <p>Build URL: <a href="${env.BUILD_URL}">${env.BUILD_URL}</a></p>
                """,
                to: 'tanmayabhinav@gmail.com',
                mimeType: 'text/html'
        }
    }
}
